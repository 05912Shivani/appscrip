// import Head from "next/head";
// import Image from "next/image";
// import { Geist, Geist_Mono } from "next/font/google";
// import styles from "@/styles/Home.module.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export default function Home() {
//   return (
//     <>
//       <Head>
//         <title>Create Next App</title>
//         <meta name="description" content="Generated by create next app" />
//         <meta name="viewport" content="width=device-width, initial-scale=1" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>
//       <div
//         className={`${styles.page} ${geistSans.variable} ${geistMono.variable}`}
//       >
//         <main className={styles.main}>
//           <Image
//             className={styles.logo}
//             src="/next.svg"
//             alt="Next.js logo"
//             width={180}
//             height={38}
//             priority
//           />
//           <ol>
//             <li>
//               Get started by editing <code>pages/index.js</code>.
//             </li>
//             <li>Save and see your changes instantly.</li>
//           </ol>

//           <div className={styles.ctas}>
//             <a
//               className={styles.primary}
//               href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//               target="_blank"
//               rel="noopener noreferrer"
//             >
//               <Image
//                 className={styles.logo}
//                 src="/vercel.svg"
//                 alt="Vercel logomark"
//                 width={20}
//                 height={20}
//               />
//               Deploy now
//             </a>
//             <a
//               href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//               target="_blank"
//               rel="noopener noreferrer"
//               className={styles.secondary}
//             >
//               Read our docs
//             </a>
//           </div>
//         </main>
//         <footer className={styles.footer}>
//           <a
//             href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             target="_blank"
//             rel="noopener noreferrer"
//           >
//             <Image
//               aria-hidden
//               src="/file.svg"
//               alt="File icon"
//               width={16}
//               height={16}
//             />
//             Learn
//           </a>
//           <a
//             href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             target="_blank"
//             rel="noopener noreferrer"
//           >
//             <Image
//               aria-hidden
//               src="/window.svg"
//               alt="Window icon"
//               width={16}
//               height={16}
//             />
//             Examples
//           </a>
//           <a
//             href="https://nextjs.org?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             target="_blank"
//             rel="noopener noreferrer"
//           >
//             <Image
//               aria-hidden
//               src="/globe.svg"
//               alt="Globe icon"
//               width={16}
//               height={16}
//             />
//             Go to nextjs.org →
//           </a>
//         </footer>
//       </div>
//     </>
//   );
// }


// import { useState } from 'react';
// import Head from 'next/head';
// import Header from '../components/Header';
// import ProductCard from '../components/ProductCard';
// import Footer from '../components/Footer';
// import Sidebar from '@/components/Sidebar';
// import styles from '../styles/Home.module.css';

// export default function Home({ products }) {
//   const [sortBy, setSortBy] = useState('RECOMMENDED');
//   const [showFilter, setShowFilter] = useState(true);

//   const sortOptions = [
//     'RECOMMENDED',
//     'NEWEST FIRST',
//     'POPULAR',
//     'PRICE : HIGH TO LOW',
//     'PRICE : LOW TO HIGH',
//   ];

//   // Sort products based on selection
//   const sortedProducts = [...products].sort((a, b) => {
//     switch (sortBy) {
//       case 'PRICE : HIGH TO LOW':
//         return b.price - a.price;
//       case 'PRICE : LOW TO HIGH':
//         return a.price - b.price;
//       case 'NEWEST FIRST':
//         return b.id - a.id; // assuming id is incremental
//       default:
//         return 0;
//     }
//   });

//   const itemList = {
//     "@context": "https://schema.org",
//     "@type": "ItemList",
//     "itemListElement": sortedProducts.map((p, idx) => ({
//       "@type": "ListItem",
//       "position": idx + 1,
//       "item": {
//         "@type": "Product",
//         "name": p.title,
//         "image": p.image,
//         "description": p.description,
//         "sku": String(p.id),
//         "brand": p.category || "Appscrip Store",
//         "offers": {
//           "@type": "Offer",
//           "priceCurrency": "USD",
//           "price": p.price,
//           "availability": "https://schema.org/InStock"
//         }
//       }
//     }))
//   };

//   return (
//     <>
//       <Head>
//         <title>DISCOVER OUR PRODUCTS</title>
//         <meta
//           name="description"
//           content="Discover top-quality products — responsive PLP demo (SSR) built with Next.js."
//         />
//         <meta name="robots" content="index, follow" />
//         <script
//           type="application/ld+json"
//           dangerouslySetInnerHTML={{ __html: JSON.stringify(itemList) }}
//         />
//       </Head>

//       <Header />

//       <main className={styles.main}>
//         {/* Page Title */}
//         <h1 className={styles.pageTitle}>DISCOVER OUR PRODUCTS</h1>
//         <h2 className={styles.subTitle}>
//           Handpicked items — responsive listing powered by SSR
//         </h2>

//         {/* Top Controls */}
//         <div className={styles.topControls}>
//           <div>
//             <button
//               onClick={() => setShowFilter(!showFilter)}
//               className={styles.hideFilterBtn}
//             >
//               {showFilter ? 'HIDE FILTER' : 'SHOW FILTER'}
//             </button>
//           </div>

//           <div>
//             <select
//               value={sortBy}
//               onChange={(e) => setSortBy(e.target.value)}
//               className={styles.sortSelect}
//             >
//               {sortOptions.map((opt) => (
//                 <option key={opt} value={opt}>
//                   {opt}
//                 </option>
//               ))}
//             </select>
//           </div>
//         </div>

//         {/* Flex layout */}
//         <div className={styles.layout}>
//           {showFilter && <Sidebar />}
//           <section className={styles.grid} aria-label="Products">
//             {sortedProducts.map((p) => (
//               <ProductCard key={p.id} product={p} />
//             ))}
//           </section>
//         </div>
//       </main>

//       <Footer />
//     </>
//   );
// }

// export async function getServerSideProps() {
//   const res = await fetch('https://fakestoreapi.com/products');
//   const products = await res.json();
//   return { props: { products } };
// }


import { useState } from "react";
import Head from "next/head";
import Header from "../components/Header";
import ProductCard from "../components/ProductCard";
import Footer from "../components/Footer";
import Sidebar from "@/components/Sidebar";
import styles from "../styles/Home.module.css";

export default function Home({ products }) {
  const [sortBy, setSortBy] = useState("RECOMMENDED");
  const [showFilter, setShowFilter] = useState(true);
  const [selectedCategories, setSelectedCategories] = useState([]);

  // Filter products based on selected categories
  const filteredProducts =
    selectedCategories.length > 0
      ? products.filter((p) => selectedCategories.includes(p.category))
      : products;

  // Sort filtered products
  const sortedProducts = [...filteredProducts].sort((a, b) => {
    switch (sortBy) {
      case "PRICE : HIGH TO LOW":
        return b.price - a.price;
      case "PRICE : LOW TO HIGH":
        return a.price - b.price;
      case "NEWEST FIRST":
        return b.id - a.id;
      default:
        return 0;
    }
  });

  // Schema.org SEO data
  const itemList = {
    "@context": "https://schema.org",
    "@type": "ItemList",
    itemListElement: sortedProducts.map((p, idx) => ({
      "@type": "ListItem",
      position: idx + 1,
      item: {
        "@type": "Product",
        name: p.title,
        image: p.image,
        description: p.description,
        sku: String(p.id),
        brand: p.category || "Appscrip Store",
        offers: {
          "@type": "Offer",
          priceCurrency: "USD",
          price: p.price,
          availability: "https://schema.org/InStock",
        },
      },
    })),
  };

  return (
    <>
      <Head>
        <title>DISCOVER OUR PRODUCTS</title>
        <meta
          name="description"
          content="Discover top-quality products — responsive PLP demo (SSR) built with Next.js."
        />
        <meta name="robots" content="index, follow" />
        <script
          type="application/ld+json"
          dangerouslySetInnerHTML={{ __html: JSON.stringify(itemList) }}
        />
      </Head>

      <Header />

      <main className={styles.main}>
        {/* Page Title */}
        <h1 className={styles.pageTitle}>DISCOVER OUR PRODUCTS</h1>
        <h2 className={styles.subTitle}>
          Handpicked items — responsive listing powered by SSR
        </h2>

        {/* Top Controls */}
        <div className={styles.topControls}>
          <button
            onClick={() => setShowFilter(!showFilter)}
            className={styles.hideFilterBtn}
          >
            {showFilter ? "HIDE FILTER" : "SHOW FILTER"}
          </button>

          <select
            value={sortBy}
            onChange={(e) => setSortBy(e.target.value)}
            className={styles.sortSelect}
          >
            {[
              "RECOMMENDED",
              "NEWEST FIRST",
              "POPULAR",
              "PRICE : HIGH TO LOW",
              "PRICE : LOW TO HIGH",
            ].map((opt) => (
              <option key={opt} value={opt}>
                {opt}
              </option>
            ))}
          </select>
        </div>

        {/* Flex layout */}
        <div className={styles.layout}>
          {showFilter && (
            <Sidebar
              products={products}
              selectedCategories={selectedCategories}
              setSelectedCategories={setSelectedCategories}
            />
          )}
          <section className={styles.grid} aria-label="Products">
            {sortedProducts.map((p) => (
              <ProductCard key={p.id} product={p} />
            ))}
          </section>
        </div>
      </main>

      <Footer />
    </>
  );
}

export async function getServerSideProps() {
  const res = await fetch("https://fakestoreapi.com/products");
  const products = await res.json();
  return { props: { products } };
}
